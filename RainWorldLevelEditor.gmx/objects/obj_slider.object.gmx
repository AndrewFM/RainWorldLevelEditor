<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>bar_width = 100;
handle_width = 16;
pos = x+bar_width;
sliding = false;
hovering = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hx1 = pos-handle_width/2;
hy1 = y-handle_width*0.75;
hx2 = pos+handle_width/2;
hy2 = y+handle_width*0.75;

if (mouse_x &gt;= hx1 &amp;&amp; mouse_x &lt;= hx2 &amp;&amp; mouse_y &gt;= hy1 &amp;&amp; mouse_y &lt;= hy2) {
    hovering = true;
    if (mouse_check_button(mb_left))
        sliding = true;
} else
    hovering = false;
    
if (sliding) 
    pos = mouse_x;
if (!mouse_check_button(mb_left))
    sliding = false;
    
pos = clamp(pos, x, x+bar_width);
percent = (pos-x)/bar_width;

draw_set_color(c_ltgray);
draw_line_width(x, y, x+bar_width, y, 4);
if (hovering || sliding)
    draw_set_color(c_ltgray);
else
    draw_set_color(c_gray);
draw_roundrect(hx1, hy1, hx2, hy2, false);
draw_set_color(c_black);
draw_roundrect(hx1, hy1, hx2, hy2, true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="9" enumb="76">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Load a map file
var img_filename, img_index, temp_name, base_filename, success, file;

do {
    success = false;
    file = get_open_filename("text file|*.txt", "");
    if (string_pos("_Settings", file) != 0) {
        // User tried loading one of the Rain World map settings files,
        // rather than the map data file. Warn them and have them choose again.
        show_message("Selected file was a map properties file, not a map data file. Please choose one of the text files that does not have 'Settings' in its name.");
    } else
        success = true;
} until (success || file == "")

if (file == "")
    exit; // User canceled the loading dialog.

global.cur_map_file = file;
unload_map_images();

// Load cooresponding images.
// Fun times begin here because of Game Maker Studio's sandboxing security bullshit.
// So we have to make the user do some super unintuitive weird stuff here (the joys of using GM for stuff it's really not designed for...)
// Basically it'll loop through the image files that need to be loaded, the user just needs to keep clicking the "Load" button, that's it.
// Eventually it'll get to an image file that doesn't exist, at which point the user simply presses "Cancel". The end.
base_filename = string_delete(file, string_length(file)-3, 4);
img_index = 1;
while(true) {
    img_filename = base_filename+"_"+string(img_index)+".png";
    do {
        temp_name = get_open_filename("PNG file|*.png", img_filename);
    } until (temp_name == img_filename || temp_name == "")
    if (temp_name == "")
        break;
    global.map_images[global.map_image_count] = sprite_add(img_filename, 0, false, false, 0, 0);
    global.map_image_count += 1;
    img_index += 1;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
